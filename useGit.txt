1、下载安装

2、开始菜单->Git->Git Bash  蹦出类似命令行窗口说明Git安装成功

3、配置（--global全局）
	git config --global user.name "Your Name"
	git config --global user.email "email@example.com"

4、创建版本库
	mkdir learngit    //创建空文件夹learngit
	cd learngit	  //打开文件夹
	pwd		  //显示当前目录

5、通过git init命令把这个目录变成Git可以管理的仓库（会在文件夹下创建.git目录）
	git init

6、将文件readme.txt（根据需求添加文件）添加到仓库
	git add readme.txt

7、将文件提交到仓库
	git commit -m "说明"

8、查看仓库当前状态（若查看到有文件被修改，可查看修改了什么内容，之后加入仓库，提交到仓库）
	git status

9、查看修改了什么内容
	git diff

10、查看提交日志
	git log
	或者 git log --pretty=oneline

11、返回上一个版本
	git reset --hard HEAD^

12、还原回某个版本
	git reset --hard <版本号>

13、记录每一次命令
	git reflog

14、撤销工作区修改
	git checkout -- <文件名>

15、把暂存区的修改撤销掉，重新放回工作区
	git reset HEAD <文件名>    //放回工作区
	git checkout -- <文件名>   //撤销工作区修改

16、工作空间删除文件
	rm <文件名>
    版本库中删除文件
	git rm <文件名>
	git commit

与GitHub仓库之间的传输

	1、创建SSH Key
		$ ssh-keygen -t rsa -C "youremail@example.com"
		执行完之后会在主目录（/c/Users/Administrator）下创建.ssh (其中也多了.bash_history和.viminfo,不知道		是不是执行的上述代码创建的)
	
	2、登录GitHub，settings->SSH Keys页面，填写任意Title，在Key文本框里粘贴id_rsa.pub里的内容，点击Add Key

	3、在GitHub上创建仓库（配置默认即可）
	
	4、按照指示执行：在本地learngit仓库下运行命令	
		git remote add origin https://github.com/SunnyLily/learngit.git
	   把本地库的所有内容推送到远程库上：
		git push -u origin master
	以后每次更改本地仓库后只需执行git push origin master即可推送

从远程库克隆

	1、登录github，创建新的仓库，勾选Initialize this repository with a README，仓库名如gitskills

	2、$ git clone <仓库地址>

	3、cd gitskills

	4、ls

分支管理

	1、创建并切换到分支dev：	
	
		git checkout -b dev
		即：git branch dev
		    git checkout dev

	2、查看当前分支
		
		git branck

	3、完成项目内容，提交

		git add <文件名>

		git commit -m <说明>

	4、dev分支工作完成后，切换到主分支上

		git checkout master

	5、合并dev分支到当前分支

		git merge dev

	6、合并完成后，可以放心地删除dev分支

		git branch -d dev